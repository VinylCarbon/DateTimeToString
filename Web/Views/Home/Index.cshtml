@using System.Globalization
@model Web.Models.IndexModel
@{
    ViewBag.Title = "Index";
}
@section Style
{
    <style>
        .list-name,
        .sublist-name {
            font-family: "Roboto", "HelveticaNeueUltraLight", "HelveticaNeue-Ultra-Light", "Helvetica Neue Ultra Light", "HelveticaNeue", "Helvetica Neue", 'TeXGyreHerosRegular', "Arial", sans-serif;
            font-weight: 100;
            font-stretch: normal;
            text-shadow: 0 0 1px rgba(0, 0, 0, .3);
        }

        ul, li {
            margin: 0;
            list-style-type: none;
        }

        .list {
            float: left;
            padding: 10px;
        }

        .sublist, .pairs {
            margin-left: 5px;
            padding-left: 5px;
            /*border-left: 2px solid #999;*/
        }

        .sublist + .sublist {
            padding-top: 10px;
        }

        .list-name {
            font-size: 150%;
        }

        .sublist-name {
            font-size: 125%;
        }

        .pairs {
            font-family: Consolas, Courier New, monospace;
        }

        .pairs {
        }

        .pair-format-string {
            padding-right: 10px;
        }

        td, th {
            vertical-align: top;
        }

        form label {
            padding-top: 5px;
            display: block;
            font-size: 80%;
        }
        form div.input {
            float: left;
            margin-right: 10px;
        }
        #view { clear: both; }

        @@media only screen and (max-width : 480px) {
            form select{ width: 100%;}
        }
        </style>
}
<div id="search">
    <form>
        <div class="input">
            @Html.LabelFor(m => m.SelectedCultureId, "Culture")
            <div>@Html.DropDownListFor(m => m.SelectedCultureId, Model.Cultures)</div>
        </div>
        <div class="input">
            @Html.LabelFor(m => m.SelectedTimeZoneId, "Time Zone")
            <div>@Html.DropDownListFor(m => m.SelectedTimeZoneId, Model.TimeZones)</div>
        </div>
        <div class="input">
            <label>&nbsp;<!-- spacer --></label>
            <input type="submit" value="Refresh" />
        </div>
    </form>
</div>
<div id="view">
    <section class="lists bindto-lists">
        <div class="list" data-bind_each>
            <div class="list-name" data-bind_key="name"></div>
            <div class="sublists" data-bind_key="sublists">
                <ul class="sublist" data-bind_each>
                    <li class="sublist-name" data-bind_key="name"></li>
                    <table class="pairs">
                        <tbody data-bind_key="pairs">
                            <tr class="pair" data-bind_each>
                                <td class="pair-format-string" data-bind_key="formatString"></td>
                                <td class="pair-value" data-bind_key="value"></td>
                            </tr>
                        </tbody>
                    </table>
                </ul>
            </div>
        </div>
    </section>
</div>

@section Script
{
    <script>
        var refreshData = function () {
            var view = document.getElementById('view');
            var url = "api/data" + location.search;
            microAjax(url, function (res) {
                new Iugo(JSON.parse(res), view);
            });
        };

        var refresher;
        var startAutoRefresh = function () {
            refresher = setInterval(function () {
                refreshData();
            }, 1000);
        };
        refreshData();
        startAutoRefresh();

        function getSelectedText() {
            var text = "";
            if (typeof window.getSelection != "undefined") {
                text = window.getSelection().toString();
            } else if (typeof document.selection != "undefined" && document.selection.type == "Text") {
                text = document.selection.createRange().text;
            }
            return text;
        }

        // don't refresh the page if the user is interacting with it, e.g. copying something
        document.onmousedown = function () {
            clearInterval(refresher);
        };

        document.onmouseup = function () {
            if (!getSelectedText()) {
                // nothing selected...restart the refresher
                startAutoRefresh();
            }
        };
    </script>
}
