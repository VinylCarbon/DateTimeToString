@{
    ViewBag.Title = "Index";
}
@section Style
{
    <style>
        .list-name,
        .sublist-name {
            font-family: "Roboto","HelveticaNeueUltraLight","HelveticaNeue-Ultra-Light","Helvetica Neue Ultra Light","HelveticaNeue","Helvetica Neue",'TeXGyreHerosRegular',"Arial",sans-serif;
            font-weight: 100;
            font-stretch: normal;
            text-shadow: 0 0 1px rgba(0,0,0,.3);
        }

        ul, li {
            margin: 0;
            list-style-type: none;
        }

        .list {
            float: left;
            padding: 10px;
        }

        .sublist, .pairs {
            margin-left: 5px;
            padding-left: 5px;
            /*border-left: 2px solid #999;*/
        }

            .sublist + .sublist {
                padding-top: 10px;
            }

        .list-name {
            font-size: 150%;
        }

        .sublist-name {
            font-size: 125%;
        }

        .pairs {
            font-family: Consolas, Courier New, monospace;
        }

        .pairs {
        }

        .pair-format-string {
            padding-right: 10px;
        }
    </style>
}
<div id="view">
    <section class="lists bindto-lists">
        <div class="list" data-bind_each>
            <div class="list-name" data-bind_key="name"></div>
            <div class="sublists" data-bind_key="sublists">
                <ul class="sublist" data-bind_each>
                    <li class="sublist-name" data-bind_key="name"></li>
                    <table class="pairs">
                        <tbody data-bind_key="pairs">
                            <tr class="pair" data-bind_each>
                                <td class="pair-format-string" data-bind_key="formatString"></td>
                                <td class="pair-value" data-bind_key="value"></td>
                            </tr>
                        </tbody>
                    </table>
                </ul>
            </div>
        </div>
    </section>
</div>

@section Script
{
    <script>
        var model = {
            now: (new Date()).getTime(),
            lists: [
                {
                    name: "standard strings",
                    sublists: [{
                        name: "dates",
                        pairs: [
                            { formatString: "d", value: "9/21/2013" },
                            { formatString: "D", value: "Saturday, September 21, 2013" },
                            { formatString: "m", value: "September 21" },
                            { formatString: "y", value: "September, 2013" }
                        ]
                    }, {
                        name: "times",
                        pairs: [
                            { formatString: "t", value: "9:15 PM" },
                            { formatString: "T", value: "9:15:07 PM" }
                        ]
                    }, {
                        name: "combos",
                        pairs: [
                            { formatString: "f", value: "Saturday, September 21, 2013 9:15 PM" },
                            { formatString: "F", value: "Saturday, September 21, 2013 9:15:07 PM" },
                            { formatString: "g", value: "9/21/2013 9:15 PM" },
                            { formatString: "G", value: "9/21/2013 9:15:07 PM" },
                            { formatString: "o", value: "2013-09-21T21:15:07.0000000" },
                            { formatString: "R", value: "Sat, 21 Sep 2013 21:15:07 GMT" },
                            { formatString: "s", value: "2013-09-21T21:15:07" },
                            { formatString: "u", value: "2013-09-21 21:15:07Z" },
                            { formatString: "U", value: "Saturday, September 21, 2013 9:15 PM" }
                        ]
                    }]
                }, {
                    name: "custom dates bits",
                    sublists: [{
                        name: "year",
                        pairs: [
                            { formatString: "yyyy", value: "2013" },
                            { formatString: "yy", value: "13" }
                        ]
                    }, {
                        name: "month",
                        pairs: [
                            { formatString: "MM", value: "09" },
                            { formatString: "M", value: "9" }
                        ]
                    }, {
                        name: "day",
                        pairs: [
                            { formatString: "ddd", value: "Wed" },
                            { formatString: "dd", value: "18" },
                            { formatString: "d", value: "18" }
                        ]
                    }]
                }, {
                    name: "custom time bits",
                    sublists: [{
                        name: "hour",
                        pairs: [
                            { formatString: "HH", value: "10" },
                            { formatString: "hh", value: "10" }
                        ]
                    }, {
                        name: "minute",
                        pairs: [
                            { formatString: "mm", value: "21" }
                        ]
                    }, {
                        name: "second",
                        pairs: [
                            { formatString: "ss", value: "17" }
                        ]
                    }]
                }]
        };

        var refreshData = function () {
            var url = "api/data";
            microAjax(url, function (res) {
                new Iugo(JSON.parse(res));
            });
        };

        var refresher;
        var startAutoRefresh = function () {
            refresher = setInterval(function () {
                refreshData();
            }, 1000);
        };
        refreshData();
        startAutoRefresh();

        function getSelectedText() {
            var text = "";
            if (typeof window.getSelection != "undefined") {
                text = window.getSelection().toString();
            } else if (typeof document.selection != "undefined" && document.selection.type == "Text") {
                text = document.selection.createRange().text;
            }
            return text;
        }

        // don't refresh the page if the user is interacting with it, e.g. copying something
        document.onmousedown = function () {
            clearInterval(refresher);
        };

        document.onmouseup = function () {
            if (!getSelectedText()) {
                // nothing selected...restart the refresher
                startAutoRefresh();
            }
        };
    </script>
}
